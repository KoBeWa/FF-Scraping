name: FF Scraping

on:
  workflow_dispatch:
    inputs:
      case:
        description: "Welche Aufgabe?"
        required: true
        default: "scrapeGamecenter"
        type: choice
        options:
          - scrapeStandings
          - aggregateStandings
          - scrapeGamecenter
          - analyzeGamecenter
  push:
    branches: [ main ]

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # >>>>>>>>>>>>>>>> NFL PARAMS (ANPASSEN!) <<<<<<<<<<<<<<<<<
      LEAGUE_ID: "3082897"
      LEAGUE_START_YEAR: "2015"
      LEAGUE_END_YEAR: "2021"
      # Secret mit kompletter Cookie:-Header-Zeile
      NFL_COOKIE: ${{ secrets.NFL_COOKIE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Preflight – prüfe ENV & Cookie
        run: |
          echo "LEAGUE_ID=$LEAGUE_ID"
          echo "YEARS: $LEAGUE_START_YEAR..$LEAGUE_END_YEAR"
          python - << 'PY'
import os, sys
print("NFL_COOKIE length:", len(os.getenv("NFL_COOKIE","")))
if not os.getenv("LEAGUE_ID"):
    print("ERROR: LEAGUE_ID fehlt"); sys.exit(1)
from cookieString import have_cookie
if not have_cookie():
    print("ERROR: Kein gültiger NFL_COOKIE gefunden (ENV NFL_COOKIE oder data/nfl_cookie.txt)"); sys.exit(2)
print("OK: Cookie vorhanden")
PY

      - name: Quick sanity GET (HTML dump)
        run: |
          python - << 'PY'
from cookieString import get_session
import os, pathlib
s = get_session()
url = f"https://fantasy.nfl.com/league/{os.environ['LEAGUE_ID']}/history/2021/standings"
r = s.get(url, timeout=30, allow_redirects=True)
print("HTTP:", r.status_code, r.url)
pathlib.Path("debug").mkdir(exist_ok=True)
pathlib.Path("debug/first_page.html").write_text(r.text, encoding="utf-8")
if "Sign In" in r.text or "signin" in r.text.lower():
    raise SystemExit("Sieht nach Login-Seite aus → Cookie ungültig/abgelaufen.")
PY

      - name: Run case "${{ inputs.case || 'scrapeGamecenter' }}"
        run: |
          case "${{ inputs.case || 'scrapeGamecenter' }}" in
            scrapeStandings)    python scrapeStandings.py ;;
            aggregateStandings) python aggregateStandings.py ;;
            scrapeGamecenter)   python scrapeGamecenter.py ;;
            analyzeGamecenter)  python analyzeGamecenter.py ;;
          esac

      - name: Upload outputs (output + debug)
        uses: actions/upload-artifact@v4
        with:
          name: output-csv
          path: |
            output/**
            debug/**
          if-no-files-found: warn
